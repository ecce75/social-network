version: '3.8'
networks:
  app-network:
    driver: bridge

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}
      - NEXT_PUBLIC_BACKEND_PORT=${NEXT_PUBLIC_BACKEND_PORT}
    networks:
      - app-network

  backend:
#    image: social-network_backend:latest
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    volumes:
      - backend-db:/app/pkg/db/database.db
      - backend-images:/app/pkg/db/images
    environment:
      - NEXT_PUBLIC_URL=${NEXT_PUBLIC_URL}
      - NEXT_PUBLIC_HTTPS_PORT=${NEXT_PUBLIC_HTTPS_PORT}
      - NEXT_PUBLIC_BACKEND_PORT=${NEXT_PUBLIC_BACKEND_PORT}
      - DB_PATH=${DB_PATH}
      - IMAGE_PATH=${IMAGE_PATH}
      - IMAGE_EP=${IMAGE_EP}
    networks:
      - app-network

  caddy:
    build:
      context: .
      dockerfile: Dockerfile.caddy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:z
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  caddy_data:
  caddy_config:
  backend-db:
    driver: local
  backend-images:
    driver: local